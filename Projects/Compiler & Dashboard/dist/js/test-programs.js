function insertProgram(progNum) {
	var availableProgram = true;
	// For storing program array before concatenation
	var testProgramArray;
	var testProgram = "";
	
	// Inserts Test Program 0
	if (progNum == 0)
		testProgramArray = [ "/", "*", " ", "S", "i", "m", "p", "l", "e", " ", "P", "r", "o", "g", "r", "a", "m", " ", "-", " ", "N", "o", " ", "O", "p", "e", "r", "a", "t", "i", "o", "n", "s", " ", "*", "/", "\n", "{", "}", "$" ];
	// Inserts Test Program 1
	else if (progNum == 1)
		testProgramArray = [ "/", "*", " ", "P", "r", "i", "n", "t", " ", "O", "p", "e", "r", "a", "t", "i", "o", "n", " ", "*", "/", "\n", "{", "\n", "\t", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "e", "r", "e", " ", "i", "s", " ", "n", "o", " ", "s", "p", "o", "o", "n", "\"", ")", "\n", "}", "$" ];
	// Inserts Alan's Test Case From Project 1
	else if (progNum == 2)
		testProgramArray = [ "/", "*", " ", " ", "P", "r", "o", "v", "i", "d", "e", "d", " ", "B", "y", " ", "\n", " ", " ", "-", " ", "C", "o", "m", "p", "i", "l", "e", "r", " ", "T", "y", "r", "a", "n", "t", "\n", " ", " ", "-", " ", "A", "l", "a", "n", " ", "G", " ", "L", "a", "b", "o", "u", "s", "e", "u", "r", "\n", "*", "/", "\n", "{", "}", "$", "\t", "\n", "{", "{", "{", "{", "{", "{", "}", "}", "}", "}", "}", "}", "$", "\t", "\n", "{", "{", "{", "{", "{", "{", "}", "}", "}", "}", "}", "}", "}", "$", "\t", "\n", "{", "i", "n", "t", "\t", "@", "}", "$" ];
	// Inserts Large Test Case
	else if (progNum == 3)
		testProgramArray = [ "/", "*", " ", "L", "o", "n", "g", " ", "T", "e", "s", "t", " ", "C", "a", "s", "e", " ", "-", " ", "E", "v", "e", "r", "y", "t", "h", "i", "n", "g", " ", "E", "x", "c", "e", "p", "t", " ", "B", "o", "o", "l", "e", "a", "n", " ", "D", "e", "c", "l", "a", "r", "a", "t", "i", "o", "n", " ", "*", "/", "\n", "{", "\n", "\t", "/", "*", " ", "I", "n", "t", " ", "D", "e", "c", "l", "a", "r", "a", "t", "i", "o", "n", " ", "*", "/", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "i", "n", "t", " ", "b", "\n", "\n", "\t", "a", " ", "=", " ", "0", "\n", "\t", "b", " ", "=", " ", "0", "\n", "\n", "\t", "/", "*", " ", "W", "h", "i", "l", "e", " ", "L", "o", "o", "p", " ", "*", "/", "\n", "\t", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "3", ")", " ", "{", "\n", " ", " ", " ", " ", "\t", "p", "r", "i", "n", "t", "(", "a", ")", "\n", " ", " ", " ", " ", "\t", "w", "h", "i", "l", "e", " ", "(", "b", " ", "!", "=", " ", "3", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "p", "r", "i", "n", "t", "(", "b", ")", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "b", " ", "=", " ", "1", " ", "+", " ", "b", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "i", "f", " ", "(", "b", " ", "=", "=", " ", "2", ")", " ", "{", "\n", "\t", "\t", "\t", " ", " ", " ", " ", " ", " ", " ", " ", "/", "*", " ", "P", "r", "i", "n", "t", " ", "S", "t", "a", "t", "e", "m", "e", "n", "t", " ", "*", "/", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "e", "r", "e", " ", "i", "s", " ", "n", "o", " ", "s", "p", "o", "o", "n", "\"", "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "d", "o", " ", "n", "o", "t", "h", "i", "n", "g", " ", "*", "/", ")", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "}", "\n", " ", " ", " ", " ", "\t", "}", "\n", "\n", " ", " ", " ", " ", "\t", "b", " ", "=", " ", "0", "\n", " ", " ", " ", " ", "\t", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\n", "\t", "}", "\n", "}", "$" ];
	// Inserts Test Case With Missing $ at the end
	else if (progNum == 4)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "g", "e", "n", "e", "r", "a", "t", "e", " ", "a", " ", "w", "a", "r", "n", "i", "n", "g", "\n", " ", "-", " ", " ", "b", "e", "c", "a", "u", "s", "e", " ", "t", "h", "e", "r", "e", " ", "i", "s", " ", "n", "o", " ", "\"", "$", "\"", "\n", " ", "-", " ", " ", "a", "t", " ", "t", "h", "e", " ", "e", "n", "d", " ", "o", "f", " ", "t", "h", "e", " ", "p", "r", "o", "g", "r", "a", "m", " ", "*", "/", "\n", "{", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "a", " ", "=", " ", "1", "\n", "\t", "p", "r", "i", "n", "t", "(", "9", "+", "6", "+", "5", "+", "a", ")", "\n", "}" ];
	// Inserts If Statement Test Case
	else if (progNum == 5)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "c", "a", "s", "e", " ", "d", "e", "m", "o", "n", "s", "t", "r", "a", "t", "e", "s", " ", "t", "h", "e", " ", "c", "o", "m", "p", "i", "l", "e", "r", "'", "s", "\n", " ", "-", " ", "a", "b", "i", "l", "i", "t", "y", " ", "t", "o", " ", "c", "o", "n", "d", "i", "t", "i", "o", "n", " ", "a", "s", "s", "i", "g", "n", "m", "e", "n", "t", " ", "a", "n", "d", " ", "\n", " ", "-", " ", "p", "r", "i", "n", "t", "i", "n", "g", " ", "*", "/", "\n", "{", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "a", " ", "=", " ", "1", "\n", "\n", "\t", "i", "f", "(", "\"", "a", "\"", " ", "=", "=", " ", "\"", "a", "\"", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "2", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "a", " ", "i", "s", " ", "n", "o", "w", " ", "\"", ")", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "a", ")", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "!", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", " ", "a", " ", "i", "s", " ", "n", "o", "w", " ", "\"", ")", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "a", ")", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "=", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "i", "s", " ", "d", "o", "e", "s", " ", "n", "o", "t", " ", "p", "r", "i", "n", "t", "\"", ")", "\n", "\t", "}", "\n", "\t", "p", "r", "i", "n", "t", "(", "\"", " ", "t", "h", "i", "s", " ", "w", "o", "r", "k", "s", " ", "r", "i", "g", "h", "t", "\"", ")", "\n", "}", " ", "$" ];
	// Inserts Invalid Print Statement Case
	else if (progNum == 6)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "f", "a", "i", "l", " ", "b", "e", "c", "a", "u", "s", "e", "\n", " ", "-", " ", "y", "o", "u", " ", "c", "a", "n", "n", "o", "t", " ", "p", "r", "i", "n", "t", " ", "n", "u", "m", "b", "e", "r", "s", " ", "*", "/", "\n", "{", "\n", "\t", "p", "r", "i", "n", "t", "(", "\"", "1", "2", "\"", ")", "\n", "}", "$" ];
	// Inserts Line Break String Case
	else if (progNum == 7)
		testProgramArray = [ "/", "*", " ", "I", "n", "v", "a", "l", "i", "d", " ", "B", "r", "e", "a", "k", " ", "L", "i", "n", "e", " ", "i", "n", " ", "S", "t", "r", "i", "n", "g", " ", "*", "/", "\n", "{", "\"", "t", "w", "o", "\n", "l", "i", "n", "e", "s", "\"", "}", "$" ];
	// Inserts Invalid String Decl
	else if (progNum == 8)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "f", "a", "i", "l", " ", "b", "e", "c", "a", "u", "s", "e", " ", "a", "n", " ", "I", "d", "e", "n", "t", "i", "f", "i", "e", "r", "\n", " ", " ", "-", " ", "i", "s", " ", "e", "x", "p", "e", "c", "t", "e", "d", " ", "b", "u", "t", " ", "n", "o", "t", " ", "p", "r", "o", "v", "i", "d", "e", "d", " ", "*", "/", "\n", "{", "\n", "\t", "/", "*", " ", "1", " ", "i", "s", " ", "n", "o", "t", " ", "a", " ", "v", "a", "l", "i", "d", " ", "i", "d", "e", "n", "t", "i", "f", "i", "e", "r", " ", "*", "/", "\n", "\t", "s", "t", "r", "i", "n", "g", " ", "1", "\n", "}", "$" ];
	// Inserts Invalid Expr
	else if (progNum == 9)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "f", "a", "i", "l", " ", "b", "e", "c", "a", "u", "s", "e", " ", "y", "o", "u", "\n", " ", "-", " ", "c", "a", "n", "n", "o", "t", " ", "a", "d", "d", " ", "a", " ", "i", "n", "t", "-", "t", "y", "p", "e", " ", "t", "o", " ", "a", "\n", " ", "-", " ", "v", "a", "r", "i", "a", "b", "l", "e", ";", " ", "h", "o", "w", "e", "v", "e", "r", ",", " ", "y", "o", "u", " ", "c", "a", "n", "\n", " ", "-", " ", "a", "d", "d", " ", "a", " ", "v", "a", "r", "i", "a", "b", "l", "e", " ", "t", "o", " ", "a", "n", " ", "i", "n", "t", "-", "t", "y", "p", "e", " ", "*", "/", "\n", "{", "\n", "\t", "a", " ", "+", " ", "3", "\n", "}", "$" ];
	// Inserts Print($)
	else if (progNum == 10)
		testProgramArray = [ "/", "*", " ", "P", "r", "i", "n", "t", "i", "n", "g", " ", "a", "n", " ", "E", "P", "O", "S", " ", "i", "s", " ", "a", "n", "\n", " ", "-", " ", "i", "n", "v", "a", "l", "i", "d", " ", "o", "p", "e", "r", "a", "t", "i", "o", "n", " ", "t", "h", "a", "t", "\n", " ", "-", " ", "y", "o", "u", " ", "s", "h", "o", "u", "l", "d", " ", "b", "e", " ", "k", "i", "l", "l", "e", "d", " ", "f", "o", "r", "\n", " ", "-", " ", "t", "h", "i", "n", "k", "i", "n", "g", " ", "t", "h", "a", "t", " ", "i", "t", " ", "w", "o", "u", "l", "d", " ", "w", "o", "r", "k", " ", "*", "/", "\n", "{", "\n", "\t", "p", "r", "i", "n", "t", "(", "$", ")", "\n", "}", "$" ];
	// Missing Expr line 19
	else if (progNum == 11)
		testProgramArray = [ "/", "*", " ", "T", "h", "e", "r", "e", " ", "i", "s", " ", "a", " ", "m", "i", "s", "s", "i", "n", "g", " ", "E", "x", "p", "r", " ", "o", "n", " ", "l", "i", "n", "e", " ", "1", "9", "\n", " ", "-", " ", "t", "h", "a", "t", " ", "w", "i", "l", "l", " ", "c", "a", "u", "s", "e", " ", "t", "h", "i", "s", " ", "e", "n", "t", "i", "r", "e", " ", "c", "o", "d", "e", " ", "t", "o", "\n", " ", "-", " ", "f", "a", "i", "l", " ", "p", "a", "r", "s", "e", " ", "*", "/", "\n", "{", "\n", "\t", "i", "n", "t", " ", "a", "\n", " ", " ", " ", " ", "\t", "i", "n", "t", " ", "b", "\n", "\n", " ", " ", " ", " ", "\t", "a", " ", "=", " ", "0", "\n", " ", " ", " ", " ", "\t", "b", " ", "=", " ", "0", "\n", "\n", " ", " ", " ", " ", "\t", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "3", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "p", "r", "i", "n", "t", "(", "a", ")", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "w", "h", "i", "l", "e", " ", "(", "b", " ", "!", "=", " ", "3", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "p", "r", "i", "n", "t", "(", "b", ")", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "b", " ", "=", " ", "1", " ", "+", " ", "b", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "i", "f", " ", "(", "b", " ", "=", "=", " ", "2", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "e", "r", "e", " ", "i", "s", " ", "n", "o", " ", "s", "p", "o", "o", "n", "\"", ")", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "\t", "}", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "}", "\n", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "b", " ", "=", " ", "0", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "\t", "a", " ", "=", " ", "1", " ", "+", " ", "\n", " ", " ", " ", "\t", " ", "}", "\n", "}", "$" ];
	// Undeclared Variable [ b ]
	else if (progNum == 12)
		testProgramArray = [ "{", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "0", "\n", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "z", "\n", " ", " ", " ", " ", "z", " ", "=", " ", "\"", "b", "o", "n", "d", "\"", "\n", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "9", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", "i", "f", " ", "(", "a", " ", "!", "=", " ", "5", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "b", "o", "n", "d", "\"", ")", "\n", " ", " ", " ", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "b", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b", " ", "=", " ", "\"", "j", "a", "m", "e", "s", " ", "b", "o", "n", "d", "\"", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "b", ")", "\n", " ", " ", " ", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "{", "/", "*", "H", "o", "l", "y", " ", "H", "e", "l", "l", " ", "T", "h", "i", "s", " ", "i", "s", " ", "D", "i", "s", "g", "u", "s", "t", "i", "n", "g", "*", "/", "}", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "c", "\n", " ", " ", " ", " ", "c", " ", "=", " ", "t", "r", "u", "e", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "d", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "t", "r", "u", "e", " ", "=", "=", " ", "(", "t", "r", "u", "e", " ", "=", "=", " ", "f", "a", "l", "s", "e", ")", ")", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "a", " ", "=", "=", " ", "b", ")", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "1", " ", "=", "=", " ", "a", ")", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "1", " ", "!", "=", " ", "1", ")", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "\"", "s", "t", "r", "i", "n", "g", "\"", " ", "=", "=", " ", "1", ")", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "a", " ", "!", "=", " ", "\"", "s", "t", "r", "i", "n", "g", "\"", ")", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "(", "\"", "s", "t", "r", "i", "n", "g", "\"", " ", "!", "=", " ", "\"", "s", "t", "r", "i", "n", "g", "\"", ")", "\n", " ", " ", " ", " ", "i", "f", " ", "(", "d", " ", "=", "=", " ", "t", "r", "u", "e", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "c", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "c", " ", "=", " ", "1", " ", "+", " ", "d", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "i", "f", " ", "(", "c", " ", "=", "=", " ", "1", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "u", "g", "h", "\"", ")", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "\"", "s", "t", "r", "i", "n", "g", "\"", " ", "=", "=", " ", "a", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "1", " ", "=", "=", " ", "t", "r", "u", "e", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "\"", "s", "t", "r", "i", "n", "g", "\"", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "}", "\n", "}", "$" ];
	// Code Generation Fail - FUGLY
	else if (progNum == 13)
		testProgramArray = [ "{", "i", "n", "t", "i", "i", "=", "0", "s", "t", "r", "i", "n", "g", "s", "s", "=", "\"", "h", "e", "l", "l", "o", "\"", "b", "o", "o", "l", "e", "a", "n", "b", "b", "=", "(", "t", "r", "u", "e", "=", "=", "(", "1", "!", "=", "2", ")", ")", "i", "f", "(", "b", "=", "=", "t", "r", "u", "e", ")", "{", "w", "h", "i", "l", "e", "(", "t", "r", "u", "e", "!", "=", "(", "b", "!", "=", "(", "f", "a", "l", "s", "e", "=", "=", "(", "2", "!", "=", "3", ")", ")", ")", ")", "{", "i", "=", "1", "+", "i", "p", "r", "i", "n", "t", "(", "s", ")", "}", "}", "p", "r", "i", "n", "t", "(", "\"", "u", "g", "l", "y", " ", "c", "o", "d", "e", "\"", ")", "}", "$" ];
	// Boolean Test Case - Good Program
	else if (progNum == 14)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "'", "i", "n", "t", "e", "r", "e", "s", "t", "i", "n", "g", "'", " ", "c", "o", "d", "e", " ", "s", "e", "g", "m", "e", "n", "t", " ", "d", "e", "m", "o", "n", "s", "t", "r", "a", "t", "e", "s", " ", "\n", " ", "-", " ", "t", "h", "i", "s", " ", "c", "o", "m", "p", "i", "l", "e", "r", "'", "s", " ", "a", "b", "i", "l", "i", "t", "y", " ", "t", "o", " ", "p", "r", "i", "n", "t", " ", "b", "o", "o", "l", "e", "a", "n", "s", ".", " ", "D", "u", "e", "\n", " ", "-", " ", "t", "o", " ", "d", "i", "f", "f", "e", "r", "e", "n", "t", " ", "w", "o", "r", "k", "f", "l", "o", "w", "s", " ", "t", "h", "i", "s", " ", "c", "o", "m", "p", "i", "l", "e", "r", " ", "p", "r", "i", "n", "t", "s", "\n", " ", "-", " ", "b", "o", "o", "l", "e", "a", "n", "s", " ", "i", "n", " ", "t", "w", "o", " ", "d", "i", "f", "f", "e", "r", "e", "n", "t", " ", "w", "a", "y", "s", ",", " ", "b", "o", "t", "h", " ", "a", "r", "e", " ", "s", "h", "o", "w", "n", " ", "h", "e", "r", "e", ".", "\n", " ", "-", " ", "R", "e", "s", "u", "l", "t", ":", " ", "1", " ", "0", " ", "f", "a", "l", "s", "e", " ", "t", "r", "u", "e", " ", "8", " ", "f", "a", "l", "s", "e", "8", "*", "/", "\n", "{", "\n", "\t", "b", "o", "o", "l", "e", "a", "n", " ", "b", "\n", "\t", "s", "t", "r", "i", "n", "g", " ", "s", "\n", "\t", "s", " ", "=", " ", "\"", " ", "\"", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "a", " ", "=", " ", "8", "\n", "\t", "i", "n", "t", " ", "c", "\n", "\t", "c", " ", "=", " ", "6", "\n", "\t", "b", " ", "=", " ", "t", "r", "u", "e", "\n", "\t", "p", "r", "i", "n", "t", "(", "b", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "s", ")", "\n", "\t", "b", " ", "=", " ", "f", "a", "l", "s", "e", "\n", "\t", "p", "r", "i", "n", "t", "(", "b", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "s", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "(", "a", " ", "!", "=", " ", "8", ")", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "s", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "(", "a", " ", "=", "=", " ", "2", " ", "+", " ", "c", ")", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "s", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "a", ")", "\n", "\t", "i", "f", " ", "(", "c", " ", "!", "=", " ", "a", ")", " ", "{", "\n", "\t", " ", " ", " ", " ", "c", " ", "=", " ", "2", " ", "+", " ", "c", "\n", "\t", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "s", ")", "\n", "\t", "}", "\n", "\t", "p", "r", "i", "n", "t", "(", "(", "a", " ", "!", "=", " ", "c", ")", ")", "\n", "\t", "p", "r", "i", "n", "t", "(", "c", ")", "\n", "}", " ", "$" ];
	// Undeclared Variable [ b ] - FUGLY Version
	else if (progNum == 15)
		testProgramArray = [ "{", "i", "n", "t", "a", "a", "=", "0", "s", "t", "r", "i", "n", "g", "z", "z", "=", "\"", "b", "o", "n", "d", "\"", "w", "h", "i", "l", "e", "(", "a", "!", "=", "9", ")", "{", "i", "f", "(", "a", "!", "=", "5", ")", "{", "p", "r", "i", "n", "t", "(", "\"", "b", "o", "n", "d", "\"", ")", "}", "{", "a", "=", "1", "+", "a", "s", "t", "r", "i", "n", "g", "b", "b", "=", "\"", "j", "a", "m", "e", "s", " ", "b", "o", "n", "d", "\"", "p", "r", "i", "n", "t", "(", "b", ")", "}", "}", "{", "/", "*", "H", "o", "l", "y", " ", "H", "e", "l", "l", " ", "T", "h", "i", "s", " ", "i", "s", " ", "D", "i", "s", "g", "u", "s", "t", "i", "n", "g", "*", "/", "}", "b", "o", "o", "l", "e", "a", "n", "c", "c", "=", "t", "r", "u", "e", "b", "o", "o", "l", "e", "a", "n", "d", "d", "=", "(", "t", "r", "u", "e", "=", "=", "(", "t", "r", "u", "e", "=", "=", "f", "a", "l", "s", "e", ")", ")", "d", "=", "(", "a", "=", "=", "b", ")", "d", "=", "(", "1", "=", "=", "a", ")", "d", "=", "(", "1", "!", "=", "1", ")", "d", "=", "(", "\"", "s", "t", "r", "i", "n", "g", "\"", "=", "=", "1", ")", "d", "=", "(", "a", "!", "=", "\"", "s", "t", "r", "i", "n", "g", "\"", ")", "d", "=", "(", "\"", "s", "t", "r", "i", "n", "g", "\"", "!", "=", "\"", "s", "t", "r", "i", "n", "g", "\"", ")", "i", "f", "(", "d", "=", "=", "t", "r", "u", "e", ")", "{", "i", "n", "t", "c", "c", "=", "1", "+", "d", "i", "f", "(", "c", "=", "=", "1", ")", "{", "p", "r", "i", "n", "t", "(", "\"", "u", "g", "h", "\"", ")", "}", "}", "w", "h", "i", "l", "e", "(", "\"", "s", "t", "r", "i", "n", "g", "\"", "=", "=", "a", ")", "{", "w", "h", "i", "l", "e", "(", "1", "=", "=", "t", "r", "u", "e", ")", "{", "a", "=", "1", "+", "\"", "s", "t", "r", "i", "n", "g", "\"", "}", "}", "}", "$" ];
	// Code Generation Fail - Beautified
	else if (progNum == 16)
		testProgramArray = [ "{", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "i", "\r", "\n", " ", " ", " ", " ", "i", " ", "=", " ", "0", "\r", "\n", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "s", "\r", "\n", " ", " ", " ", " ", "s", " ", "=", " ", "\"", "h", "e", "l", "l", "o", "\"", "\r", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", "\r", "\n", " ", " ", " ", " ", "b", " ", "=", " ", "(", "t", "r", "u", "e", " ", "=", "=", " ", "(", "1", " ", "!", "=", " ", "2", ")", ")", " ", "i", "f", " ", "(", "b", " ", "=", "=", " ", "t", "r", "u", "e", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "t", "r", "u", "e", " ", "!", "=", " ", "(", "b", " ", "!", "=", " ", "(", "f", "a", "l", "s", "e", " ", "=", "=", " ", "(", "2", " ", "!", "=", " ", "3", ")", ")", ")", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", " ", "=", " ", "1", " ", "+", " ", "i", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "s", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "u", "g", "l", "y", " ", "c", "o", "d", "e", "\"", ")", "\r", "\n", "}", "$" ];
	// Good Program Test Case 2
	else if (progNum == 17)
		testProgramArray = [ "{", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", " ", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", " ", "\n", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "c", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "5", " ", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "b", " ", "=", " ", "t", "r", "u", "e", " ", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "c", " ", "=", " ", "\"", "i", "n", "t", "a", "\"", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "c", ")", "\n", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "b", ")", " ", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "a", ")", "\n", "}", "$" ];
	// Semantic Analysis Fail - Alan Case Undeclared Variable b
	else if (progNum == 18)
		testProgramArray = [ "/", "*", " ", "T", "e", "s", "t", " ", "C", "a", "s", "e", " ", "G", "r", "a", "c", "i", "o", "u", "s", "l", "y", " ", "P", "r", "o", "v", "i", "d", "e", "d", " ", "b", "y", ":", " ", "A", "l", "a", "n", " ", "G", ".", " ", "L", "a", "b", "o", "u", "s", "e", "u", "r", " ", "*", "/", "\n", "{", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", " ", "\n", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", " ", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", "\n", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "b", ")", "\n", "}", "$" ];
	// Semantic Analysis Fail - String Assigned Bool
	else if (progNum == 19)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "c", "a", "s", "e", " ", "w", "i", "l", "l", " ", "f", "a", "i", "l", " ", "T", "y", "p", "e", " ", "C", "h", "e", "c", "k", "i", "n", "g", "\n", " ", "-", " ", "b", "e", "c", "a", "u", "s", "e", " ", "s", "t", "r", "i", "n", "g", "-", "t", "y", "p", "e", " ", "i", "s", " ", "a", "s", "s", "i", "g", "n", "e", "d", "\n", " ", "-", " ", "b", "o", "o", "l", "e", "a", "n", " ", "t", "y", "p", "e", " ", "*", "/", "\n", "{", "\n", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "a", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "t", "r", "u", "e", "\n", "}", "$" ];
	// Semantic Analysis Warning - 11 Warnings
	else if (progNum == 20)
		testProgramArray = [ "/", "*", " ", "T", "H", "I", "S", " ", "D", "O", "E", "S", " ", "N", "O", "T", " ", "F", "A", "I", "L", " ", "*", "/", "\n", "\n", "/", "*", " ", "T", "h", "i", "s", " ", "i", "s", " ", "i", "s", " ", "s", "h", "o", "w", " ", "t", "h", "e", " ", "w", "a", "r", "n", "i", "n", "g", "\n", " ", "-", " ", "p", "r", "i", "n", "t", "i", "n", "g", " ", "c", "a", "p", "a", "b", "i", "l", "i", "t", "i", "e", "s", " ", "o", "f", " ", "t", "h", "i", "s", "\n", " ", "-", " ", "S", "e", "m", "a", "n", "t", "i", "c", " ", "A", "n", "a", "l", "y", "z", "e", "r", " ", "*", "/", "\n", "{", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", "\n", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "d", "\n", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "e", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "f", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "f", " ", "=", " ", "\"", "t", "e", "r", "h", "e", " ", "i", "s", "\"", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "g", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "h", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "h", " ", "=", " ", "4", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "j", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "k", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "}", "\n", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "c", "\n", " ", " ", " ", " ", "{", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "g", "\n", " ", " ", " ", " ", "b", " ", "=", " ", "t", "r", "u", "e", "\n", " ", " ", " ", " ", "}", "\n", "}", "$" ];
	// Semantic Analysis Fail - BooleanExpr: String == Int
	else if (progNum == 21)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "f", "a", "i", "l", "e", "s", " ", "b", "e", "c", "a", "u", "s", "e", " ", "y", "o", "u", " ", "a", "r", "e", "\n", " ", "-", " ", "c", "o", "m", "p", "a", "r", "i", "n", "g", " ", "a", " ", "s", "t", "r", "i", "n", "g", "-", "t", "y", "p", "e", " ", "t", "o", " ", "a", "\n", " ", "-", " ", "i", "n", "t", "-", "t", "y", "p", "e", " ", "*", "/", "\n", "{", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "a", " ", "=", " ", "1", "\n", "\n", "\t", "i", "f", "(", "\"", "a", "\"", " ", "=", "=", " ", "3", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "2", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "!", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "=", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "}", "\n", "}", " ", "$" ];
	// Semantic Analysis Fail - IntExpr: Int + String
	else if (progNum == 22)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "f", "a", "i", "l", " ", "b", "e", "c", "a", "u", "s", "e", "\n", " ", "-", " ", "y", "o", "u", " ", "a", "r", "e", " ", "a", "d", "d", "i", "n", "g", " ", "a", " ", "s", "t", "r", "i", "n", "g", "-", "t", "y", "p", "e", "\n", " ", "-", " ", "t", "o", " ", "a", " ", "i", "n", "t", "-", "t", "y", "p", "e", " ", "a", "n", "d", " ", "a", "s", "s", "i", "g", "i", "n", "g", " ", "i", "t", " ", "*", "/", "\n", "{", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "4", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "\"", "t", "h", "e", "r", "e", "\"", "\n", "}", "$" ];
	// Semantic Analysis Fail - Variable Redeclaration
	else if (progNum == 23)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "w", "i", "l", "l", " ", "f", "a", "i", "l", " ", "b", "e", "c", "a", "u", "s", "e", " ", "t", "h", "e", "\n", " ", "-", " ", "v", "a", "r", "i", "a", "b", "l", "e", " ", "n", "a", "m", "e", " ", "i", "s", " ", "r", "e", "d", "e", "c", "l", "a", "r", "e", "d", " ", "\n", " ", "-", " ", "i", "n", " ", "t", "h", "e", " ", "s", "a", "m", "e", " ", "s", "c", "o", "p", "e", " ", "*", "/", "\n", "{", "\n", " ", " ", "i", "n", "t", " ", "a", "\n", " ", " ", "a", " ", "=", " ", "9", "\n", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "a", "\n", "}", "$" ];
	// Semantic Analysis Fail - Boolean Hell && String != Boolean
	else if (progNum == 24)
		testProgramArray = [ "/", "*", " ", "A", "s", "s", "u", "m", "i", "n", "g", " ", "y", "o", "u", " ", "g", "e", "t", " ", "p", "a", "s", "t", " ", "B", "o", "o", "l", "e", "a", "n", " ", "H", "e", "l", "l", "\n", " ", "-", " ", "t", "h", "e", "r", "e", " ", "i", "s", " ", "a", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", "e", "i", "n", "g", " ", "c", "o", "m", "p", "a", "r", "e", "d", " ", "t", "o", "\n", " ", "-", " ", "a", " ", "s", "t", "r", "i", "n", "g", " ", "w", "h", "i", "c", "h", " ", "w", "i", "l", "l", " ", "c", "a", "u", "s", "e", " ", "a", " ", "t", "y", "p", "e", " ", "e", "r", "r", "o", "r", " ", "*", "/", "\n", "{", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "4", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", "\n", " ", " ", " ", " ", "b", " ", "=", " ", "t", "r", "u", "e", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "c", "\n", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "d", "\n", " ", " ", " ", " ", "d", " ", "=", " ", "\"", "t", "h", "e", "r", "e", " ", "i", "s", " ", "n", "o", " ", "s", "p", "o", "o", "n", "\"", "\n", " ", " ", " ", " ", "c", " ", "=", " ", "(", "d", " ", "!", "=", " ", "\"", "t", "h", "e", "r", "e", " ", "i", "s", " ", "a", " ", "s", "p", "o", "o", "n", "\"", ")", "\n", " ", " ", " ", " ", "i", "f", "(", "c", " ", "=", "=", " ", "(", "f", "a", "l", "s", "e", " ", "!", "=", " ", "(", "b", " ", "=", "=", " ", "(", "t", "r", "u", "e", " ", "=", "=", " ", "(", "a", " ", "=", "=", " ", "3", "+", "1", ")", ")", ")", ")", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "(", "b", " ", "!", "=", " ", "d", ")", ")", "\n", " ", " ", " ", " ", "}", "\n", "}", "$" ];
	// AST Accuracy Test - Boolean Hell
	else if (progNum == 25)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "t", "e", "s", "t", " ", "c", "a", "s", "e", " ", "i", "s", " ", "i", "n", "c", "l", "u", "d", "e", "d", " ", "b", "e", "c", "a", "u", "s", "e", " ", "i", "t", " ", "c", "o", "m", "p", "l", "e", "t", "e", "l", "y", " ", "m", "e", "s", "s", "e", "d", "\r", "\n", " ", "-", " ", "u", "p", " ", "m", "y", " ", "A", "S", "T", " ", "w", "i", "t", "h", " ", "b", "o", "o", "l", "e", "a", "n", " ", "h", "e", "l", "l", " ", "a", "n", "d", " ", "k", "e", "e", "p", "i", "n", "g", " ", "t", "r", "a", "c", "k", " ", "o", "f", " ", "b", "o", "o", "l", "e", "x", "p", "r", "\r", "\n", " ", "-", " ", "m", "a", "y", " ", "i", "t", " ", "s", "e", "r", "v", "e", " ", "a", "s", " ", "a", " ", "g", "o", "o", "d", " ", "b", "e", "n", "c", "h", "m", "a", "r", "k", " ", "f", "o", "r", " ", "t", "h", "o", "s", "e", " ", "w", "h", "o", " ", "c", "o", "m", "e", " ", "a", "f", "t", "e", "r", " ", "*", "/", "\r", "\n", "{", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "0", "\r", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "b", "\r", "\n", " ", " ", " ", " ", "b", " ", "=", " ", "f", "a", "l", "s", "e", "\r", "\n", " ", " ", " ", " ", "b", "o", "o", "l", "e", "a", "n", " ", "c", "\r", "\n", " ", " ", " ", " ", "c", " ", "=", " ", "t", "r", "u", "e", "\r", "\n", " ", " ", " ", " ", "w", "h", "i", "l", "e", "(", "(", "(", "a", "!", "=", "9", ")", " ", "=", "=", " ", "(", "\"", "t", "e", "s", "t", "\"", " ", "!", "=", " ", "\"", "a", "l", "a", "n", "\"", ")", ")", " ", "=", "=", " ", "(", "(", "5", "=", "=", "5", ")", " ", "!", "=", " ", "(", "b", " ", "=", "=", " ", "c", ")", ")", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "a", "\"", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "d", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "d", " ", "=", " ", "\"", "y", "e", "s", "\"", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "d", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "5", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", "}", "$" ];
	// While != Test Case
	else if (progNum == 26)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "t", "e", "s", "t", " ", "c", "a", "s", "e", " ", "h", "e", "l", "p", "s", " ", "s", "h", "o", "w", " ", "t", "h", "e", "\r", "\n", " ", "-", " ", "W", "h", "i", "l", "e", " ", "n", "o", "t", " ", "e", "q", "u", "a", "l", " ", "c", "o", "n", "d", "i", "t", "i", "o", "n", " ", "r", "e", "s", "u", "l", "t", "s", "\r", "\n", " ", "-", " ", "a", "r", "e", " ", "a", "s", " ", "f", "o", "l", "l", "o", "w", "\r", "\n", " ", "-", " ", "R", "e", "s", "u", "l", "t", "s", ":", " ", "2", "2", "3", "4", "5", "8", "m", "e", "o", "w", " ", "*", "/", "\r", "\n", "{", "\r", "\n", " ", " ", " ", " ", "s", "t", "r", "i", "n", "g", " ", "s", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "1", "\r", "\n", " ", " ", " ", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "s", " ", "=", " ", "\"", "m", "e", "o", "w", "\"", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "2", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "a", ")", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "5", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "a", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "3", " ", "+", " ", "a", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "s", ")", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", "}", " ", "$", "\r", "\n" ];
	// While a != 3
	else if (progNum == 27)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "W", "h", "i", "l", "e", " ", "l", "o", "o", "p", " ", "w", "i", "l", "l", " ", "k", "e", "e", "p", " ", "g", "o", "i", "n", "g", "\r", "\n", " ", "-", " ", "u", "n", "t", "i", "l", " ", "a", " ", "=", "=", " ", "3", " ", "\r", "\n", " ", "-", " ", "R", "e", "s", "u", "l", "t", "s", ":", " ", "0", "0", "1", "m", "e", "o", "w", "2", "1", "0", "1", "m", "e", "o", "w", "2", "2", "0", "1", "m", "e", "o", "w", "2", " ", "*", "/", "\r", "\n", "{", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "b", "\r", "\n", "\r", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "0", "\r", "\n", " ", " ", " ", " ", "b", " ", "=", " ", "0", "\r", "\n", "\r", "\n", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "3", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "a", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "b", " ", "!", "=", " ", "3", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "b", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "b", " ", "=", " ", "1", " ", "+", " ", "b", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "i", "f", " ", "(", "b", " ", "=", "=", " ", "2", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "m", "e", "o", "w", "\"", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "b", " ", "=", " ", "0", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", "}", " ", "$" ];
	// Boolean Print
	else if (progNum == 28)
		testProgramArray = [ "/", "*", " ", "B", "o", "o", "l", "e", "a", "n", " ", "E", "x", "p", "r", " ", "P", "r", "i", "n", "t", "i", "n", "g", " ", "T", "e", "s", "t", " ", "C", "a", "s", "e", " ", "*", "/", "\r", "\n", "{", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", "a", " ", "=", " ", "0", "\r", "\n", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "5", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "a", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", "\r", "\n", " ", " ", " ", " ", "i", "f", " ", "(", "\"", "s", "t", "r", "\"", " ", "=", "=", " ", "\"", "s", "t", "r", "\"", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "e", "y", " ", "a", "r", "e", " ", "e", "q", "u", "a", "l", "\"", ")", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", "\r", "\n", " ", " ", " ", " ", "i", "f", " ", "(", "\"", "s", "t", "r", "a", "\"", " ", "=", "=", " ", "\"", "s", "t", "r", "b", "\"", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "n", "o", " ", "d", "i", "c", "e", "\"", ")", " ", " ", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", "\r", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "(", "\"", "a", "\"", " ", "!", "=", " ", "\"", "b", "\"", ")", ")", "\r", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "(", "\"", "a", "\"", " ", "!", "=", " ", "\"", "a", "\"", ")", ")", "\r", "\n", "}", " ", "$" ];
	// Long Case - FUGLY
	else if (progNum == 29)
		testProgramArray = [ "/", "*", "L", "o", "n", "g", "T", "e", "s", "t", "C", "a", "s", "e", "-", "E", "v", "e", "r", "y", "t", "h", "i", "n", "g", "E", "x", "c", "e", "p", "t", "B", "o", "o", "l", "e", "a", "n", "D", "e", "c", "l", "a", "r", "a", "t", "i", "o", "n", "*", "/", "{", "/", "*", "I", "n", "t", "D", "e", "c", "l", "a", "r", "a", "t", "i", "o", "n", "*", "/", "i", "n", "t", "a", "i", "n", "t", "b", "a", "=", "0", "b", "=", "0", "/", "*", "W", "h", "i", "l", "e", "L", "o", "o", "p", "*", "/", "w", "h", "i", "l", "e", "(", "a", "!", "=", "3", ")", "{", "p", "r", "i", "n", "t", "(", "a", ")", "w", "h", "i", "l", "e", "(", "b", "!", "=", "3", ")", "{", "p", "r", "i", "n", "t", "(", "b", ")", "b", "=", "1", "+", "b", "i", "f", "(", "b", "=", "=", "2", ")", "{", "/", "*", "P", "r", "i", "n", "t", "S", "t", "a", "t", "e", "m", "e", "n", "t", "*", "/", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "e", "r", "e", " ", "i", "s", " ", "n", "o", " ", "s", "p", "o", "o", "n", "\"", "/", "*", "T", "h", "i", "s", "w", "i", "l", "l", "d", "o", "n", "o", "t", "h", "i", "n", "g", "*", "/", ")", "}", "}", "b", "=", "0", "a", "=", "1", "+", "a", "}", "}", "$" ];
	// Memory Buffer Overflow
	else if (progNum == 30)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "c", "o", "n", "s", "u", "m", "e", "s", " ", "t", "o", "o", " ", "m", "u", "c", "h", " ", "m", "e", "m", "o", "r", "y", " ", "a", "n", "d", " ", "w", "i", "l", "l", "\n", " ", "-", " ", "f", "a", "i", "l", " ", "b", "e", " ", "d", "e", "f", "a", "u", "l", "t", ",", " ", "e", "v", "e", "n", " ", "t", "h", "o", "u", "g", "h", " ", "i", "t", " ", "i", "s", " ", "v", "a", "l", "i", "d", " ", "*", "/", "\n", "{", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "a", " ", "=", " ", "1", "\n", "\n", "\t", "i", "f", "(", "\"", "a", "\"", " ", "=", "=", " ", "\"", "a", "\"", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "2", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "a", " ", "n", "o", "w", " ", "i", "s", " ", "t", "w", "o", "\"", ")", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "!", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", " ", "a", " ", "n", "o", "w", " ", "i", "s", " ", "t", "h", "r", "e", "e", "\"", ")", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "=", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "i", "s", " ", "d", "o", "e", "s", " ", "n", "o", "t", " ", "p", "r", "i", "n", "t", "\"", ")", "\n", "\t", "}", "\n", "\t", "\n", "\t", "i", "f", " ", "t", "r", "u", "e", " ", "{", "\n", "\t", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", " ", "t", "h", "i", "s", " ", "w", "i", "l", "l", " ", "a", "l", "w", "a", "y", "s", " ", "b", "e", " ", "t", "r", "u", "e", "\"", ")", "\n", "\t", "}", "\n", "\t", "\n", "\t", "i", "f", " ", "f", "a", "l", "s", "e", " ", "{", "\n", "\t", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", " ", "t", "h", "i", "s", " ", "w", "i", "l", "l", " ", "n", "e", "v", "e", "r", " ", "p", "r", "i", "n", "t", "\"", ")", "\n", "\t", "}", "\n", "\t", "p", "r", "i", "n", "t", "(", "\"", " ", "t", "h", "i", "s", " ", "w", "o", "r", "k", "s", " ", "r", "i", "g", "h", "t", "\"", ")", "\n", "}", " ", "$" ];
	// Infinite Loop && Max Memory Usage
	else if (progNum == 31)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "c", "o", "d", "e", " ", "s", "e", "g", "m", "e", "n", "t", " ", "u", "s", "e", "s", " ", "t", "h", "e", " ", "m", "a", "x", "\n", " ", "-", " ", "a", "l", "l", "o", "t", "t", "e", "d", " ", "m", "e", "m", "o", "r", "y", " ", "2", "5", "6", " ", "b", "y", "t", "e", "s", " ", "\n", " ", "-", " ", "A", "l", "s", "o", " ", "t", "h", "i", "s", " ", "i", "s", " ", "a", "n", " ", "i", "n", "f", "i", "n", "i", "t", "e", " ", "l", "o", "o", "p", " ", "*", "/", "\n", "{", "\n", "\t", "i", "n", "t", " ", "a", "\n", "\t", "a", " ", "=", " ", "1", "\n", "\n", "\t", "i", "f", "(", "\"", "a", "\"", " ", "=", "=", " ", "\"", "a", "\"", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "2", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "a", " ", "n", "o", "w", " ", "i", "s", " ", "t", "w", "o", "\"", ")", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "!", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", " ", "a", " ", "n", "o", "w", " ", "i", "s", " ", "t", "h", "r", "e", "e", "\"", ")", "\n", "\t", "}", "\n", "\n", "\t", "i", "f", "(", "a", " ", "=", "=", " ", "1", ")", " ", "{", "\n", "\t", "\t", "a", " ", "=", " ", "3", "\n", "\t", "\t", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "i", "s", " ", "d", "o", "e", "s", " ", "n", "o", "t", " ", "p", "r", "i", "n", "t", "\"", ")", "\n", "\t", "}", "\n", "\t", "\n", "\t", "w", "h", "i", "l", "e", " ", "t", "r", "u", "e", " ", "{", "\n", "\t", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", " ", "t", "h", "i", "s", " ", "w", "i", "l", "l", " ", "a", "l", "w", "a", "y", "s", " ", "b", "e", " ", "t", "r", "u", "e", "\"", ")", "\n", "\t", "}", "\n", "\t", "\n", "\t", "i", "f", " ", "f", "a", "l", "s", "e", " ", "{", "\n", "\t", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "t", "h", "i", "\"", ")", "\n", "\t", "}", "\n", "}", " ", "$" ];
	// Addition: Print and Check
	else if (progNum == 32)
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "s", "t", "a", "t", "e", "m", "e", "n", "t", " ", "s", "h", "o", "w", "s", " ", "t", "h", "a", "t", " ", "a", "d", "d", "i", "t", "i", "o", "n", "\r", "\n", " ", "-", " ", "c", "h", "e", "c", "k", "i", "n", "g", " ", "a", "n", "d", " ", "p", "r", "i", "n", "t", "i", "n", "g", " ", "a", "r", "e", " ", "b", "o", "t", "h", " ", "v", "a", "l", "i", "d", "\r", "\n", " ", "-", " ", "o", "p", "t", "i", "o", "n", "s", " ", "t", "h", "a", "t", " ", "c", "a", "n", " ", "b", "e", " ", "p", "e", "r", "f", "o", "r", "m", "e", "d", "\r", "\n", " ", "-", " ", "R", "e", "s", "u", "l", "t", ":", " ", "6", "6", "6", "a", "d", "d", "i", "t", "i", "o", "n", " ", "c", "h", "e", "c", "k", "f", "a", "l", "s", "e", "t", "r", "u", "e", "t", "r", "u", "e", "*", "/", "\r", "\n", "{", "\r", "\n", " ", " ", " ", " ", "i", "n", "t", " ", "a", "\r", "\n", " ", " ", " ", " ", "w", "h", "i", "l", "e", " ", "(", "a", " ", "!", "=", " ", "3", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "1", " ", "+", " ", "2", " ", "+", " ", "3", ")", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "i", "f", " ", "(", "1", "+", "1", "+", "1", "+", "1", "+", "1", " ", "=", "=", " ", "2", "+", "3", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "a", "d", "d", "i", "t", "i", "o", "n", " ", "c", "h", "e", "c", "k", "\"", ")", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "i", "f", " ", "(", "1", "+", "5", "+", "3", " ", "!", "=", " ", "8", ")", " ", "{", "\r", "\n", " ", " ", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "f", "a", "l", "s", "e", ")", "\r", "\n", " ", " ", " ", " ", "}", "\r", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "(", "t", "r", "u", "e", " ", "=", "=", " ", "t", "r", "u", "e", ")", ")", "\r", "\n", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "(", "f", "a", "l", "s", "e", " ", "=", "=", " ", "f", "a", "l", "s", "e", ")", ")", "\r", "\n", "}", " ", "$", "\r", "\n" ];
	// Variable Addition: While Condition
	else if (progNum == 33) 
		testProgramArray = [ "/", "*", " ", "T", "h", "i", "s", " ", "c", "a", "s", "e", " ", "d", "e", "m", "o", "n", "s", "t", "r", "a", "t", "e", "s", " ", "t", "h", "e", " ", "c", "o", "m", "p", "i", "l", "e", "r", "'", "s", "\n", " ", "-", " ", "a", "b", "i", "l", "i", "t", "y", " ", "t", "o", " ", "g", "e", "t", " ", "v", "a", "l", "u", "e", "s", " ", "a", "d", "d", "e", "d", " ", "t", "o", " ", "v", "a", "r", "i", "a", "b", "l", "e", "s", "\n", " ", "-", " ", "a", "n", "d", " ", "c", "o", "m", "p", "a", "r", "e", " ", "t", "h", "e", "m", " ", "w", "i", "t", "h", "o", "u", "t", " ", "o", "v", "e", "r", "w", "r", "i", "t", "i", "n", "g", " ", "t", "h", "e", " ", "\n", " ", "-", " ", "t", "h", "e", " ", "v", "a", "r", "i", "a", "b", "l", "e", "'", "s", " ", "t", "r", "u", "e", " ", "v", "a", "l", "u", "e", ",", " ", "u", "n", "l", "e", "s", "s", " ", "i", "t", " ", "i", "s", "\n", " ", "-", " ", "a", "s", "s", "i", "g", "n", "e", "d", " ", "a", " ", "n", "e", "w", " ", "v", "a", "l", "u", "e", " ", "\n", " ", "-", " ", "R", "e", "s", "u", "l", "t", ":", " ", "i", "n", "t", " ", "a", " ", "i", "s", " ", "5", ".", ".", ".", "i", "n", "t", " ", "a", " ", "i", "s", " ", "1", "0", " ", "i", "n", "t", " ", "m", " ", "i", "s", " ", "8", "*", "/", "\n", "{", "\n", " ", " ", "i", "n", "t", " ", "a", "\n", " ", " ", "a", " ", "=", " ", "4", "\n", " ", " ", "i", "n", "t", " ", "m", "\n", " ", " ", "m", " ", "=", " ", "4", " ", "+", " ", "4", "\n", " ", " ", "w", "h", "i", "l", "e", " ", "(", "1", " ", "+", " ", "a", " ", "!", "=", " ", "3", " ", "+", " ", "m", ")", " ", "{", "\n", " ", " ", " ", " ", " ", " ", "a", " ", "=", " ", "1", " ", "+", " ", "a", "\n", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "i", "n", "t", " ", "a", " ", "i", "s", " ", "\"", ")", "\n", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "a", ")", "\n", " ", " ", " ", " ", " ", " ", "p", "r", "i", "n", "t", "(", "\"", " ", "\"", ")", "\n", " ", " ", "}", "\n", " ", " ", "p", "r", "i", "n", "t", "(", "\"", "i", "n", "t", " ", "m", " ", "i", "s", " ", "\"", ")", "\n", " ", " ", "p", "r", "i", "n", "t", "(", "m", ")", "\n", "}", "$" ];
	else 
		availableProgram = false;
	
	// Clears Console and Resets page
	$('#console').val("");
	editor.setValue("");
	resetIndexPage();
	
	if (availableProgram) {
		
		testProgramArray.forEach(function(element) {
			testProgram = testProgram + element;
		});
		
		$('#console').val(testProgram);
		editor.setValue(testProgram);
		var row = editor.session.getLength() - 1
		var column = editor.session.getLine(row).length // or simply Infinity
		editor.gotoLine(row + 1, column)
	
		if (verbose) {
			$('#log').val("Inserted Program: Test Case " + progNum);
			console.log("Inserted Program: Test Case " + progNum);
		}
	}
	
	else {
		if (verbose) {
			$('#log').val("No valid program number detected...");			
			console.log("No valid program number detected...");
		}
	}
	
}